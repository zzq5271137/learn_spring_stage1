<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        属性注入:
        1. Set方法的属性注入
        2. 构造方法的方式的属性注入
        3. Set方法设置引用类型的属性
        4. P名称空间的属性注入 (需要引入命名空间xmlns:p="http://www.springframework.org/schema/p")
           p:dog-ref="dog"
        5. spEL表达式的属性注入 (el表达式的属性注入)
        6. 集合类型属性注入(数组, List, Set, Map)
    -->
    <bean id="student" class="com.mycomp.demo4.Student">
        <!--
            1. Set方法的属性注入, 对应属性需要有setter方法;
            <property name="name" value="zzq"/>
            <property name="age" value="100"/>
        -->

        <!--
            2. 构造方法的方式的属性注入, 相应类中必须有含参的构造方法;
            标签中, name属性就是你含参构造方法的参数的名称;
            <constructor-arg name="name" value="zzq"/>
            <constructor-arg name="age" value="100"/>
         -->
        <constructor-arg name="name" value="zzq"/>
        <constructor-arg name="age" value="100"/>

        <!--
            3. Set方法设置引用类型的属性, 从其他的bean中取这个对象(ref即指向其他的bean, 相当于java代码中的getBean()方法);
            <property name="dog" ref="dog"/>
        -->

        <!--
            5. spEL表达式的属性注入 (el表达式的属性注入), 注入引用类型;
            如果需要注入的属性是引用类型, value的值是对其他bean的引用(其他bean的id);
            <property name="dog" value="#{dog2}"/>
            或者可以直接引用其他bean的某一个property的值;
            <property name="myDogName" value="#{dog2.dogname}"/>
        -->
        <property name="dog" value="#{dog2}"/>
        <property name="myDogName" value="#{dog2.dogname}"/>

        <!--
            6. 集合类型属性注入(数组)
        -->
        <property name="myArr">
            <list>
                <value>张三</value>
                <value>李四</value>
                <value>王五</value>
            </list>
        </property>

        <!--
            6. 集合类型属性注入(List)
        -->
        <property name="myList">
            <list>
                <value>123</value>
                <value>456</value>
            </list>
        </property>

        <!--
            6. 集合类型属性注入(Set)
        -->
        <property name="mySet">
            <set>
                <value>000</value>
                <value>111</value>
            </set>
        </property>

        <!--
            6. 集合类型属性注入(Map)
        -->
        <property name="myMap">
            <map>
                <entry key="1" value="value1"/>
                <entry key="2" value="value2"/>
            </map>
        </property>
    </bean>

    <!-- 4. P名称空间的属性注入 -->
    <bean id="dog" class="com.mycomp.demo4.Dog"
          p:dogname="大黄" p:dogage="2" p:dogcolor="黄色">
        <!--
            <property name="dogname" value="大黄"/>
            <property name="dogage" value="2"/>
            <property name="dogcolor" value="黄色"/>
        -->
    </bean>

    <!-- 5. spEL表达式的属性注入 (el表达式的属性注入) -->
    <bean id="dog2" class="com.mycomp.demo4.Dog">
        <property name="dogname" value="#{'小黑'}"/>
        <property name="dogage" value="#{4}"/>
        <property name="dogcolor" value="#{'黑色'}"/>
    </bean>
</beans>
